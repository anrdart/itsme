const cursor=document.createElement('div')cursor.className='custom-cursor' document.body.appendChild(cursor)const cursorFollower=document.createElement('div')cursorFollower.className='cursor-follower' document.body.appendChild(cursorFollower)let mouseX=0 let mouseY=0 let followerX=0 let followerY=0 document.addEventListener('mousemove',(e)=>{mouseX=e.clientX mouseY=e.clientY const hovered=document.elementFromPoint(mouseX,mouseY)if(hovered){if(hovered.tagName==='A' || hovered.classList.contains('btn')){cursor.classList.add('hover-link')follower.classList.add('hover-link')}else if(hovered.classList.contains('project-card')){cursor.classList.add('hover-project')follower.classList.add('hover-project')}else{cursor.classList.remove('hover-link','hover-project')follower.classList.remove('hover-link','hover-project')}}})document.addEventListener('mouseleave',()=>{cursor.style.opacity='0' cursorFollower.style.opacity='0'})document.addEventListener('mouseenter',()=>{cursor.style.opacity='1' cursorFollower.style.opacity='1'})function animateCursor(){followerX+=(mouseX-followerX)*0.1 followerY+=(mouseY-followerY)*0.1 cursor.style.left=mouseX+'px' cursor.style.top=mouseY+'px' cursorFollower.style.left=followerX+'px' cursorFollower.style.top=followerY+'px' requestAnimationFrame(animateCursor)}animateCursor()document.addEventListener('mousedown',()=>{cursor.classList.add('click')cursorFollower.classList.add('click')})document.addEventListener('mouseup',()=>{cursor.classList.remove('click')cursorFollower.classList.remove('click')})document.body.style.cursor='none'}let scene,camera,renderer,particles,particlesMaterial,particlesGeometry;let isInitialized=false;const script=document.createElement('script');script.src='https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js';script.onload=()=> initThree(theme);document.head.appendChild(script)}if(!isInitialized || !particlesMaterial)return;const colors=particlesGeometry.attributes.color.array;const particlesCount=colors.length/3;for(let i=0;i < particlesCount*3;i+=3){const color=new THREE.Color();if(theme==='light'){const hue=Math.random()*0.4+0.5;color.setHSL(hue,0.8,0.3)}else{const hue=Math.random()*0.1+0.5;color.setHSL(hue,0.7,0.6)}colors[i]=color.r;colors[i+1]=color.g;colors[i+2]=color.b}particlesGeometry.attributes.color.needsUpdate=true;particlesMaterial.opacity=theme==='light' ? 1.0 : 0.8}function initThree(theme){const THREE=window.THREE;if(!THREE)return;const canvas=document.getElementById('background-canvas')if(!canvas)return scene=new THREE.Scene()camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000)renderer=new THREE.WebGLRenderer({canvas,alpha: true,antialias: true})renderer.setSize(window.innerWidth,window.innerHeight)renderer.setPixelRatio(Math.min(window.devicePixelRatio,2))particlesGeometry=new THREE.BufferGeometry()const particlesCount=1000 const positions=new Float32Array(particlesCount*3)const colors=new Float32Array(particlesCount*3)for(let i=0;i < particlesCount*3;i+=3){positions[i]=(Math.random()-0.5)*10 positions[i+1]=(Math.random()-0.5)*10 positions[i+2]=(Math.random()-0.5)*10 const color=new THREE.Color()if(theme==='light'){const hue=Math.random()*0.4+0.5;color.setHSL(hue,0.8,0.3)}else{const hue=Math.random()*0.1+0.5;color.setHSL(hue,0.7,0.6)}colors[i]=color.r colors[i+1]=color.g colors[i+2]=color.b}particlesGeometry.setAttribute('position',new THREE.BufferAttribute(positions,3))particlesGeometry.setAttribute('color',new THREE.BufferAttribute(colors,3))particlesMaterial=new THREE.PointsMaterial({size: 0.02,vertexColors: true,transparent: true,opacity: theme==='light' ? 1.0 : 0.8,blending: THREE.AdditiveBlending})particles=new THREE.Points(particlesGeometry,particlesMaterial)scene.add(particles)camera.position.z=5 const mouse={x: 0,y: 0}window.addEventListener('mousemove',(event)=>{mouse.x=(event.clientX/window.innerWidth)*2-1 mouse.y=-(event.clientY/window.innerHeight)*2+1})const animate=()=>{requestAnimationFrame(animate)particles.rotation.x+=0.001 particles.rotation.y+=0.002 particles.rotation.x+=mouse.y*0.0001 particles.rotation.y+=mouse.x*0.0001 renderer.render(scene,camera)}animate()isInitialized=true;window.addEventListener('resize',()=>{camera.aspect=window.innerWidth/window.innerHeight camera.updateProjectionMatrix()renderer.setSize(window.innerWidth,window.innerHeight)})}